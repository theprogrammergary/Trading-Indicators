// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© atraderstoolbox

//@version=5
strategy("for_nakefoster v5 strategy", overlay=true, margin_long=100, margin_short=100)

_rr = input.float(2.0, title = 'Risk-to-Reward')
_lookback = input.int(5, title = 'Lookback for Swing High/Low', minval = 1, maxval = 100)

// create signals
a = 3
c = 5
h = false

xATR = ta.atr(c)
nLoss = a * xATR
src =  close
xATRTrailingStop = 0.0
iff_1 = src > nz(xATRTrailingStop[1], 0) ? src - nLoss : src + nLoss
iff_2 = src < nz(xATRTrailingStop[1], 0) and src[1] < nz(xATRTrailingStop[1], 0) ? math.min(nz(xATRTrailingStop[1]), src + nLoss) : iff_1
xATRTrailingStop := src > nz(xATRTrailingStop[1], 0) and src[1] > nz(xATRTrailingStop[1], 0) ? math.max(nz(xATRTrailingStop[1]), src - nLoss) : iff_2

pos = 0
iff_3 = src[1] > nz(xATRTrailingStop[1], 0) and src < nz(xATRTrailingStop[1], 0) ? -1 : nz(pos[1], 0)
pos := src[1] < nz(xATRTrailingStop[1], 0) and src > nz(xATRTrailingStop[1], 0) ? 1 : iff_3

xcolor = pos == -1 ? color.red : pos == 1 ? color.green : color.blue

ema = ta.ema(src, 1)
above = ta.crossover(ema, xATRTrailingStop)
below = ta.crossover(xATRTrailingStop, ema)

buy = src > xATRTrailingStop and above
sell = src < xATRTrailingStop and below
barbuy = src > xATRTrailingStop
barsell = src < xATRTrailingStop

dchannel(len)=>
    float dchannel_hh = ta.highest(len)
    float dchannel_ll = ta.lowest(len)
    
    int dchannel_trend = 0
    dchannel_trend := close > dchannel_hh[1] ? 1 : close < dchannel_ll[1] ? -1 : nz(dchannel_trend[1])
    
dchannelalt(len, maintrend)=>
    float dchannelalt_hh = ta.highest(len)
    float dchannelalt_ll = ta.lowest(len)
    
    int dchannelalt_trend = 0
    dchannelalt_trend := close > dchannelalt_hh[1] ? 1 : close < dchannelalt_ll[1] ? -1 : nz(dchannelalt_trend[1])

    maintrend == 1  ? dchannelalt_trend == 1  ? #00FF00ff :  #00FF009f :
     maintrend == -1 ? dchannelalt_trend == -1 ? #FF0000ff :  #FF00009f :
     na

dlen = 20
maintrend = dchannel(dlen)


[superTrend, direction] = ta.supertrend(4, 10)

var int last_buysellsignal = 0
var bool buy_signal = na
var bool sell_signal = na

buy_signal := barstate.isconfirmed and buy and maintrend == 1 and direction == -1 and (nz(last_buysellsignal[1],0) != 1)
sell_signal := barstate.isconfirmed and sell and maintrend == - 1 and direction == 1 and (nz(last_buysellsignal[1],0) != -1)
last_buysellsignal := buy_signal ? 1 : sell_signal ? -1 : last_buysellsignal[1]

var float long_stop = 0.00
var float long_tgt = 0.00
var float short_stop = 0.00
var float short_tgt = 0.00

lookback_high = ta.highest(high, _lookback)
lookback_low = ta.lowest(low, _lookback)

long_stop := buy_signal ? lookback_low : strategy.position_size > 0 ? long_stop[1] : na
short_stop := sell_signal ? lookback_high : strategy.position_size < 0 ? short_stop[1] : na

long_tgt := buy_signal ? close + math.abs(close - long_stop) : strategy.position_size > 0 ? long_tgt[1] : na
short_tgt := sell_signal ? close - math.abs(close - short_stop) : strategy.position_size < 0 ? short_tgt[1] : na


p_entry = plot(strategy.position_avg_price, title = 'Entry', color = color.blue, style = plot.style_circles)

p_tgt = plot(strategy.position_size > 0 ? long_tgt 
 : strategy.position_size < 0 ? short_tgt : na,
 title = 'TGT', color = color.lime, style = plot.style_circles)

p_sl = plot(strategy.position_size > 0 ? long_stop
 : strategy.position_size < 0 ? short_stop : na,
 title = 'SL', color = color.fuchsia, style = plot.style_circles)

fill(p_entry, p_tgt, title = 'Profit BG', color = color.new(color.green,90))
fill(p_entry, p_sl, title = 'Loss BG', color = color.new(color.red,90))

if buy_signal
    strategy.entry("LE", strategy.long)

if sell_signal
    strategy.entry("SS_E", strategy.short)

if buy_signal or strategy.position_avg_price > 0
    strategy.exit('LX', 'LE', limit = long_tgt, stop = long_stop)

if sell_signal or strategy.position_avg_price < 0
    strategy.exit('SS_X', 'SS_E', limit = short_tgt, stop = short_stop)

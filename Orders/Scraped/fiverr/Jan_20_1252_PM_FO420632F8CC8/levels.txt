// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © atraderstoolbox

//@version=5
indicator("for_andreroux07_levels", overlay = true, max_boxes_count = 200)


len = str.length(str.tostring(math.round(close,0)))
rounding_sing = len == 5 ? 10 : len == 4 ? 1 : len >= 3 ? 0.1 : 0.01
baseline_sing = math.round( close / rounding_sing) * rounding_sing

rounding_tens = len == 5 ? 100 : len == 4 ? 10 : len >= 3 ? 1 : 0.1
baseline_tens = math.round( close / rounding_tens) * rounding_tens

rounding_hund = len == 5 ? 1000 : len == 4 ? 100 : len >= 3 ? 10: 0.1
baseline_hund = math.round( close / rounding_hund) * rounding_hund

rounding_thou = len == 5 ? 10000 : len == 4 ? 1000 : len >= 3 ? 100 : 10
baseline_thou = math.round( close / rounding_thou) * rounding_thou

// plot( baseline_tens)
// plot( baseline_hund)
// plot( baseline_thou)



// --FUNCTION TO DRAW PSYCH THEORY LINES -- //
f_draw_box(boxes, baseline, round, mult_top, mult_bottom, color) =>
    
    // clear
    array_size = array.size(boxes) 
    if array_size > 0
        for i = 0 to array_size- 1
            box.delete(array.get(boxes, i))
        array.clear(boxes)


    for i = 0 to 3
        array.unshift(boxes, box.new(left = time[1], top = baseline+(i*round) + (round/10*mult_top), right = time, bottom = baseline+(i*round) + (round/10*mult_bottom), extend = extend.both, xloc = xloc.bar_time, bgcolor = color, border_color = color.new(color.white, 100)))
        array.unshift(boxes, box.new(left = time[1], top = baseline-((i+1)*round) + (round/10*mult_top), right = time, bottom = baseline-((i+1)*round) + (round/10*mult_bottom), extend = extend.both, xloc = xloc.bar_time, bgcolor = color, border_color = color.new(color.white, 100)))


// --FUNCTION TO DRAW PSYCH THEORY LINES -- //


var group1_single_box = array.new_box(20, na)
var group1_tens_box = array.new_box(20, na)
var group1_hund_box = array.new_box(20, na)
var group1_thou_box = array.new_box(20, na)


group1_sing = input.bool(false, title = "1's   ", group = 'Group 1', inline = '1')
group1_singcolor = input.color(color.new(color.green, 80), title = '', group = 'Group 1', inline = '1')

group1_tens = input.bool(true, title = "10's  ", group = 'Group 1', inline = '2')
group1_tenscolor = input.color(color.new(color.green, 80), title = '', group = 'Group 1', inline = '2')

group1_hund = input.bool(false, title = "100's ", group = 'Group 1', inline = '3')
group1_hundcolor = input.color(color.new(color.green, 80), title = '', group = 'Group 1', inline = '3')

group1_thou = input.bool(false, title = "1000's", group = 'Group 1', inline = '4')
group1_thoucolor = input.color(color.new(color.green, 80), title = '', group = 'Group 1', inline = '4')


var group2_single_box = array.new_box(20, na)
var group2_tens_box = array.new_box(20, na)
var group2_hund_box = array.new_box(20, na)
var group2_thou_box = array.new_box(20, na)

group2_sing = input.bool(false, title = "1's   ", group = 'Group 2', inline = '1')
group2_singcolor = input.color(color.new(#7e57c2, 80), title = '', group = 'Group 2', inline = '1')

group2_tens = input.bool(true, title = "10's  ", group = 'Group 2', inline = '2')
group2_tenscolor = input.color(color.new(#7e57c2, 80), title = '', group = 'Group 2', inline = '2')

group2_hund = input.bool(false, title = "100's ", group = 'Group 2', inline = '3')
group2_hundcolor = input.color(color.new(#7e57c2, 80), title = '', group = 'Group 2', inline = '3')

group2_thou = input.bool(false, title = "1000's", group = 'Group 2', inline = '4')
group2_thoucolor = input.color(color.new(#7e57c2, 80), title = '', group = 'Group 2', inline = '4')


if barstate.islast 
    if group1_sing
        f_draw_box(group1_single_box, baseline_sing, rounding_sing, 3, 0, group1_singcolor)
    if group1_tens
        f_draw_box(group1_tens_box, baseline_tens, rounding_tens, 3, 0, group1_tenscolor)
    if group1_hund
        f_draw_box(group1_hund_box, baseline_hund, rounding_hund, 3, 0, group1_hundcolor)
    if group1_thou
        f_draw_box(group1_thou_box, baseline_thou, rounding_thou, 3, 0, group1_thoucolor)

    if group2_sing
        f_draw_box(group2_single_box, baseline_sing, rounding_sing, 8, 5, group2_singcolor)
    if group2_tens
        f_draw_box(group2_tens_box, baseline_tens, rounding_tens, 8, 5, group2_tenscolor)
    if group2_hund
        f_draw_box(group2_hund_box, baseline_hund, rounding_hund, 8, 5, group2_hundcolor)
    if group2_thou
        f_draw_box(group2_thou_box, baseline_thou, rounding_thou, 8, 5, group2_thoucolor)
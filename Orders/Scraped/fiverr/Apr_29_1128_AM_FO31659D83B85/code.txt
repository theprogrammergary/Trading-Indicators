// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© atraderstoolbox

//@version=5
indicator("for_yummypotato", overlay = false)

ProLength = input.int(28)
OverboughtOversold = input.float(1.2)
GenerateAlerts= input.bool(false)
AlertRequiresAim= input.bool(true)

f_stochastic(kperiod, slowing_period) =>
    lowest_k = ta.lowest(low, kperiod)
    c1 = close - lowest_k
    c2 = ta.highest(high, kperiod) - lowest_k
    fastk = c2 != 0 ? c1 / c2 * 100 : 0

    full_k = ta.ema(fastk,slowing_period)
    full_k

k1v = math.max(-100, math.min(100, f_stochastic(5,3)) - 50) / 50.01
k2v = math.max(-100, math.min(100, f_stochastic(8,5)) - 50) / 50.01
k3v = math.max(-100, math.min(100, f_stochastic(17,5)) - 50) / 50.01



ema1 = ta.ema(close, ProLength)
ema2 = ta.ema(ema1, ProLength)
ema3 = ta.ema(ema2, ProLength)
tavg= 3 * ema1 - 3 * ema2 + ema3

savg = tavg[math.floor(ProLength/2)]
matr = 0.5*ta.atr(10)
savgstate = low > savg + matr ? 1 : high < savg - matr ? -1 : 0

[diplus, diminus, adx] = ta.dmi(math.floor(ProLength/2), math.floor(ProLength/2))
hh = adx
hhsig = hh <= hh[1] or hh[1] > hh[2] ? na : 0
plotshape(hhsig , title = 'hhsig', style = shape.square, size = size.tiny, location = location.absolute,
 color = savgstate == 1 ? color.green : savgstate == -1 ? color.red : color.yellow)

hhDown = savgstate*hhsig == -1 ? 0 : na
zeroline = na(hhsig) ? 0 : na
plot(zeroline, title = 'Zero', style = plot.style_linebr,
 color = savgstate == 1 ? color.green : savgstate == -1 ? color.red : color.yellow)

p_ob = plot(OverboughtOversold, title = 'Overbought',  color = color.blue)
p_os = plot(-OverboughtOversold, title = 'Oversold',  color = color.blue)

var int CountChg = 0
var int sc = 0

if k2v > 0
    CountChg := k1v <= k2v and k1v[1] > k2v[1] and k2v[1] > 0 ? -1 : 0
    sc := math.min(0, nz(sc[1], 0)) + CountChg
else 
    CountChg := k1v >= k2v and k1v[1] < k2v[1] and k2v[1] <= 0 ? 1 : 0
    sc := math.max(0, nz(sc[1],0)) + CountChg



// global colors
css_readybuy = input.color(color.rgb(0,120,0), title = 'Ready Buy', group = 'Color Settings', inline = '1')
css_aimbuy = input.color(color.rgb(109, 195, 109), title = 'Aim Buy', group = 'Color Settings', inline = '1')
css_readysell = input.color(color.rgb(120,0,0), title = 'Ready Sell', group = 'Color Settings', inline = '2')
css_aimsell = input.color(color.rgb(255, 46, 46), title = 'Aim Sell', group = 'Color Settings', inline = '2')

if ((k2v > 0 and k1v <= k2v and k1v[1] > k2v[1]) or (k2v < 0 and k1v >= k2v and k1v[1] < k2v[1]))
    label.new(x=bar_index[1], y=-OverboughtOversold*1.25, style = label.style_none, 
     text = math.abs(sc) > 1 ? "A\nI\nM" : "R\nE\nA\nD\nY", size = size.small, textalign = text.align_center,
     color = sc > 1 ? css_aimbuy : sc == 1 ? css_readybuy : sc < -1 ? css_aimsell : css_readysell,
     textcolor = sc > 1 ? css_aimbuy : sc == 1 ? css_readybuy : sc < -1 ? css_aimsell : css_readysell)

    line.new(x1=bar_index, y1 = -OverboughtOversold*1.25, x2 = bar_index, y2 = OverboughtOversold*1.25,
     style = line.style_dashed, extend = extend.both,
     color = sc > 1 ? color.new(css_aimbuy,40) : sc == 1 ? color.new(css_readybuy,40) 
     : sc < -1 ? color.new(css_aimsell,40) : color.new(css_readysell,40))

// barcolor(
//  color = sc > 1 ? color.new(css_aimbuy,40) : sc == 1 ? color.new(css_readybuy,40) 
//      : sc < -1 ? color.new(css_aimsell,40) : color.new(css_readysell,40))

var float f3 = na
f3 := na(0.5 * (math.log((1 + k3v) / (1 - k3v)) + f3[1])) ? nz(f3[1],0)
 : 0.5 * (math.log((1 + k3v) / (1 - k3v)) + f3[1])


majorbuy = (math.sign(f3 - f3[1]) > math.sign(f3[1] - f3[2])) and not na(close) ? f3[1] : na
majorsell = (math.sign(f3 - f3[1]) < math.sign(f3[1] - f3[2]))  and not na(close) ? f3[1] : na

plot(f3, title = 'Major', color = color.fuchsia)


plotshape(majorbuy ? f3[1] : na, title = 'Major Buy',
 color = color.fuchsia, style = shape.triangleup, location = location.absolute)

plotshape(majorsell ? f3[1] : na, title = 'Major Sell',
 color = color.fuchsia, style = shape.triangledown, location = location.absolute)


fill(p_ob, p_os, title = 'Fill',
 color = sc > 1 ? color.new(css_aimbuy, 50) 
 : sc == 1 ? color.new(css_readybuy,50)
 : sc < -1 ? color.new(css_aimsell,50)
 : sc == -1 ? color.new(css_readysell,50)
 : na)

alertcondition(GenerateAlerts and (AlertRequiresAim == false or sc>1) and majorbuy<=0-OverboughtOversold,
 "Ready, Aim, Fire! Buy", "Ready, Aim, Fire! Buy")

alertcondition(GenerateAlerts and (AlertRequiresAim == false or sc<-1) and majorsell>=OverboughtOversold,
 "Ready, Aim, Fire! Sell", "Ready, Aim, Fire! Sell")



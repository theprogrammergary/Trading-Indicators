// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© atraderstoolbox

//@version=5
strategy("for_jlirano_91522", overlay = true)

//RSI
rsiLengthInput = input.int(14, minval=1, title="RSI Length", group="RSI Settings")
rsiSourceInput = input.source(close, "Source", group="RSI Settings")
maTypeInput = input.string("SMA", title="MA Type", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="RSI Settings")
maLengthInput = input.int(14, title="MA Length", group="RSI Settings")


ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)


up = ta.rma(math.max(ta.change(rsiSourceInput), 0), rsiLengthInput)
down = ta.rma(-math.min(ta.change(rsiSourceInput), 0), rsiLengthInput)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
rsiMA = ma(rsi, maLengthInput, maTypeInput)

rsi_long = rsi > rsiMA
rsi_short = rsi < rsiMA


//SMOOTHED HA

ha_smooth1 = input.int(10, title = 'Smoothed HA Length 1', group = 'Smoothed HA Settings')
ha_smooth2 = input.int(10, title = 'Smoothed HA Length 2', group = 'Smoothed HA Settings')

o = ta.ema(open,ha_smooth1)
c = ta.ema(close,ha_smooth1)
h = ta.ema(high,ha_smooth1)
l = ta.ema(low,ha_smooth1)

haclose = (o+h+l+c)/4
var float haopen = 0.00
haopen := na(haopen[1]) ? (o + c)/2 : (haopen[1] + haclose[1]) / 2
hahigh = math.max(h, math.max(haopen,haclose))
halow = math.min(l, math.min(haopen,haclose))

o2 = ta.ema(haopen, ha_smooth2)
c2 = ta.ema(haclose, ha_smooth2)
h2 = ta.ema(hahigh, ha_smooth2)
l2 = ta.ema(halow, ha_smooth2)


smoothedha_bull = c2 > o2
smoothedha_bear = o2 > c2



///////////////////////
/////CREATE SIGNALS////
///////////////////////
strategy_start = input.time(timestamp("01 January 2020 00:00:00 UTC-5"), "Strategy Start Date", group = "Strategy Settings", inline = '1')
use_trading_hours = input.bool(false, title = "Use Trading Hours", tooltip = "This is ignored if the chart timeframe is greater than or equal to the daily timeframe.", group = "Strategy Settings", inline = '2')
trading_time = input.session("0930-1600", title = " ", tooltip = "This uses Eastern Time Zone or U.S. NY Market Hours.", group = "Strategy Settings", inline = '2')
trading_hours_cond = not use_trading_hours or time("",trading_time, "America/New_York")

long_trades = input.bool(true, title = "Long Trades", tooltip = "Do we want to take long trades?" , group = "Strategy Settings", inline = '3')
short_trades = input.bool(true, title = "Short Trades", tooltip = "Do we want to take short trades?" , group = "Strategy Settings", inline = '4')

long_entry = long_trades and trading_hours_cond and rsi_long and smoothedha_bull and (smoothedha_bear[1] or smoothedha_bear[2])
long_exit = long_trades and (ta.crossover(rsi, 70) or smoothedha_bear)

short_entry = short_trades and trading_hours_cond and rsi_short and smoothedha_bear  and (smoothedha_bull[1] or smoothedha_bull[2])
short_exit = short_trades and (ta.crossunder(rsi, 30) or smoothedha_bull) 

past_strategy_start_date = time >= strategy_start ? true : false


//ORDERS
if past_strategy_start_date


    //ENTRIES
    if long_entry
        strategy.entry("LE", direction = strategy.long)   
    else if short_entry
        strategy.entry("SS_E", direction = strategy.short)   
    
    //EXITS
    if long_exit
        strategy.close("LE", comment = "LX")
    else if short_exit
        strategy.close("SS_E", comment = "SS_X")
        
    if not trading_hours_cond
        strategy.close_all(comment = "TX", immediately = true)
    










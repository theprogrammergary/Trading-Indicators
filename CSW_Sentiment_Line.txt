// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/

//@version=5
indicator('CSW Sentiment Line', overlay=true, scale=scale.none, max_lines_count=500, max_labels_count=500)

//--INSTRUCTIONS--//
instructions_tooltip = "• The CSW Sentiment Line rates RSI, Volatility, and Volume from 0 to 100. Values closer to 100
 \nmeans it is overbought or a strong reading. Values closer to 0 mean it is oversold or a weak reading. 
 \nThe Sentiment Line is just an add-on tool for your chart for a quick glance to see where RSI, Volatility, and Volume are at for the current chart symbol."

instructions = input.bool(title='Show Instructions', defval=false, inline='1', tooltip = instructions_tooltip)
if barstate.islast and instructions
    var label instruction_label = na
    if not na(instruction_label[1])
        label.delete(instruction_label[1])
    instruction_label := label.new(bar_index + 5, close, instructions_tooltip, xloc = xloc.bar_index , yloc = yloc.price, color = color.black , style = label.style_label_left, textcolor = color.white, size = size.large, textalign = text.align_left) 
//--INSTRUCTIONS--//

use_rsi = input.bool(true, 'RSI', inline='2')
rsi_len = input.int(14, '', inline='2')

use_vol = input.bool(true, "Volume", inline = '3')
vol_len = input.int(14, '', inline = '3')

use_rvi = input.bool(true, 'Volatility', inline = '4')
rvi_len = input.int(14, '', inline = '4')

color_up = input.color(color.new(#27a69b,30), title='Bull Color', inline='1', group='Visual Settings')
color_down = input.color(color.new(#b63632,30), title='Bear Color', inline='1', group='Visual Settings')
label_color = input.color(#ffffff, title = 'Label Color', inline='1', group='Visual Settings')

offset = input.int(75, 'Line Offset', group='Visual Settings', minval = 0, maxval = 500)

n = bar_index
src = close
var names = array.new_string(0)
var values = array.new_float(0)
var scale_lines = array.new_line(0)
dt = math.round(n - n[1])

rsi = ta.rsi(src,rsi_len) / 100
rsi_vol = ta.rsi(ta.sma(volume,20),vol_len) / 100
rvi = ta.rsi(ta.stdev(close, 30),rvi_len) / 100

if barstate.isfirst
    for i = 0 to 99 by 1
        array.push(scale_lines, line.new(na, na, na, na))

if barstate.islast
    if use_rsi
        array.push(values, rsi)
    if use_vol
        array.push(values, rsi_vol)
    if use_rvi
        array.push(values, rvi)
    array.push(values, array.get(values, 0))

    avg = (array.avg(values) - .5) * 2
    avg_css = color.from_gradient(avg, -1.2, 1.2, color_down, color_up)

    
    if use_rsi
        label.delete(label.new(n + offset , (rsi - .5) * 2, "⬅ " + str.tostring(math.round(rsi*100,2)) + " - RSI", xloc.bar_index, color=#00000000, style=label.style_label_left, textcolor=label_color, textalign=text.align_right)[1])
    
    if use_vol
        label.delete(label.new(n + offset , (rsi_vol - .5) * 2, "⬅ " + str.tostring(math.round(rsi_vol*100,2)) + " - Volume", xloc.bar_index, color=#00000000, style=label.style_label_left, textcolor=label_color, textalign=text.align_right)[1])
        
    if use_rvi
        label.delete(label.new(n + offset , (rvi - .5) * 2, "⬅ " + str.tostring(math.round(rvi*100,2)) + " - Volatility", xloc.bar_index, color=#00000000, style=label.style_label_left, textcolor=label_color, textalign=text.align_right)[1])
        
        
    for i = 1 to 99 by 1
        y1 = ((i - 1) / 99 - .5) * 2
        y2 = (i / 99 - .5) * 2

        css = color.from_gradient(i, 1, 100, color_down, color_up)
        scale_line = array.get(scale_lines, i)
        line.set_xloc(scale_line, n + dt * offset + dt , bar_index + dt * offset + dt, xloc=xloc.bar_index)
        line.set_y1(scale_line, y1)
        line.set_y2(scale_line, y2)
        line.set_width(scale_line, 8)
        line.set_color(scale_line, css)

    label.delete(label.new(n + offset , 1.025, '100', xloc.bar_index, yloc.price, color=#00000000, style=label.style_label_center, textcolor=color_up, textalign=text.align_center)[1])
    label.delete(label.new(n + offset , -1.025, '0', xloc.bar_index, yloc.price, color=#00000000, style=label.style_label_center, textcolor=color_down, textalign=text.align_center)[1])
    label.delete(label.new(n + offset , 1.1, '� CSW Sentiment Line', xloc.bar_index, yloc.price, color=#00000000, style=label.style_label_center, textcolor=label_color, textalign=text.align_center)[1])
